upstream docker-registry {
  server registry:5000;
}

upstream docker-gitblit-http {
  server gitblit:8080;
}

upstream docker-jenkins-http {
  server jenkins:8080;
}

server {
  listen 443 ssl;
  server_name registry.devops.polymont.fr;

  ssl_certificate /etc/nginx/conf.d/registry.crt;
  ssl_certificate_key /etc/nginx/conf.d/registry.key;

  # disable any limits to avoid HTTP 413 for large image uploads
  client_max_body_size 0;

  # required to avoid HTTP 411: see Issue #1486 (https://github.com/docker/docker/issues/1486)
  chunked_transfer_encoding on;

  location /v2/ {
    # Do not allow connections from docker 1.5 and earlier
    # docker pre-1.6.0 did not properly set the user agent on ping, catch "Go *" user agents
    if ($http_user_agent ~ "^(docker\/1\.(3|4|5(?!\.[0-9]-dev))|Go ).*$" ) {
      return 404;
    }

    # To add basic authentication to v2 use auth_basic setting plus add_header
    auth_basic "registry.localhost";
    auth_basic_user_file /etc/nginx/conf.d/registry.password;
    add_header 'Docker-Distribution-Api-Version' 'registry/2.0' always;

    proxy_pass                          http://docker-registry;
    proxy_set_header  Host              \$http_host;   # required for docker client's sake
    proxy_set_header  X-Real-IP         \$remote_addr; # pass on real client's IPvi /e
    proxy_set_header  X-Forwarded-For   \$proxy_add_x_forwarded_for;
    proxy_set_header  X-Forwarded-Proto \$scheme;
    proxy_read_timeout                  900;
  }
  
  location /gitblit/ {

    proxy_pass                          http://docker-gitblit-http;
    proxy_set_header  Host              \$http_host;   # required for docker client's sake
    proxy_set_header  X-Real-IP         \$remote_addr; # pass on real client's IP
    proxy_set_header  X-Forwarded-For   \$proxy_add_x_forwarded_for;
    proxy_set_header  X-Forwarded-Proto \$scheme;
    proxy_read_timeout                  900;
  }

  location /jenkins/ {
  
    sendfile off;

    proxy_pass                          http://docker-jenkins-http;
    proxy_set_header  Host              $host;
    proxy_set_header  X-Forwarded-Host  $host;
    proxy_set_header  X-Forwarded-Server $host;
    proxy_set_header  X-Real-IP         $remote_addr; # pass on real client's IP
    proxy_set_header  X-Forwarded-For   $proxy_add_x_forwarded_for;
    proxy_set_header  X-Forwarded-Proto $scheme;
    proxy_read_timeout                  900;

    proxy_redirect      http://  https://;
  }

}

server {
       listen         80;
       server_name    gitblit.devops.polymont.fr;
       return         301 https://$server_name$request_uri;
}
